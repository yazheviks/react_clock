{"version":3,"sources":["components/Button.js","components/Clock.js","App.js","index.js"],"names":["Button","click","type","onClick","Clock","state","date","Date","toLocaleTimeString","name","props","setInterval","setState","console","log","this","status","React","Component","App","isClockVisible","generateNumber","max","Math","floor","random","changeName","newName","className","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACpB,4BAAQC,KAAK,SAASC,QAASF,GAA/B,sBCDWG,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,qBACjBC,KAAM,EAAKC,MAAMD,MAHrB,kEAMuB,IAAD,OAClBE,aAAY,WACV,EAAKC,SAAS,CAAEN,MAAM,IAAIC,MAAOC,uBAGjCK,QAAQC,IAAI,EAAKT,MAAMC,QACtB,OAZP,+BAeY,IAAD,EACkBS,KAAKL,MAAtBM,EADD,EACCA,OAAQP,EADT,EACSA,KAIhB,OAFAM,KAAKV,MAAMI,KAAOA,EAEdO,EAEA,6BACE,mCAEG,IACAD,KAAKV,MAAMI,MAEd,mDACoBM,KAAKV,MAAMC,QAOnC,8CApCN,GAA2BW,IAAMC,WCqClBC,E,4MAjCbd,MAAQ,CACNe,gBAAgB,EAChBX,KAAM,U,EAGRR,MAAQ,WACN,EAAKW,UAAS,SAAAP,GAAK,MAAK,CACtBe,gBAAiBf,EAAMe,oB,EAI3BC,eAAiB,SAAAC,GAAG,OAAIC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,K,EAE9DI,WAAa,WACX,IAAMC,EAAU,EAAKN,eAAe,KAGpCR,QAAQC,IAAR,oCAAyC,EAAKT,MAAMI,KAApD,eAA+DkB,IAC/D,EAAKf,SAAS,CAAEH,KAAMkB,K,uDAItB,OACE,yBAAKC,UAAU,OACb,2CACA,kBAAC,EAAD,CAAOZ,OAAQD,KAAKV,MAAMe,eAAgBX,KAAMM,KAAKV,MAAMI,OAC3D,kBAAC,EAAD,CAAQR,MAAOc,KAAKd,QACpB,4BAAQC,KAAK,SAASC,QAASY,KAAKW,YAApC,qB,GA5BUT,IAAMC,WCFxBW,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.c6059e4b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ click }) => (\n  <button type=\"button\" onClick={click}>\n    Clock visibility\n  </button>\n);\n\nButton.propTypes = {\n  click: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n    name: this.props.name,\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  render() {\n    const { status, name } = this.props;\n\n    this.state.name = name;\n\n    if (status) {\n      return (\n        <div>\n          <p>\n            Name:\n            {' '}\n            {this.state.name}\n          </p>\n          <p>\n            {`Current time: ${this.state.date}`}\n          </p>\n        </div>\n      );\n    }\n\n    return (\n      <p>No clocks! </p>\n    );\n  }\n}\n\nClock.propTypes = {\n  status: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './App.scss';\nimport { Button } from './components/Button';\nimport { Clock } from './components/Clock';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 'clocks',\n  };\n\n  click = () => {\n    this.setState(state => ({\n      isClockVisible: !state.isClockVisible,\n    }));\n  }\n\n  generateNumber = max => Math.floor(Math.random() * Math.floor(max))\n\n  changeName = () => {\n    const newName = this.generateNumber(100);\n\n    // eslint-disable-next-line no-console\n    console.log(`the name has changed from ${this.state.name} to ${newName}`);\n    this.setState({ name: newName });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock status={this.state.isClockVisible} name={this.state.name} />\n        <Button click={this.click} />\n        <button type=\"button\" onClick={this.changeName}>Name changer</button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}