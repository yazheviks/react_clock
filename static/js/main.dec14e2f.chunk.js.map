{"version":3,"sources":["components/Button.js","components/Clock.js","helper.js","App.js","index.js"],"names":["Button","click","text","type","onClick","className","Clock","state","date","Date","toLocaleTimeString","setInterval","setState","console","log","this","props","status","name","React","Component","generateNumber","max","Math","floor","random","App","isClockVisible","handleClick","prevState","changeName","newName","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,G,MAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACpB,4BAAQC,KAAK,SAASC,QAASH,EAAOI,UAAU,iBAC7CH,KCFQI,EAAb,4MACEC,MAAQ,CACNC,MAAM,IAAIC,MAAOC,sBAFrB,kEAKuB,IAAD,OAClBC,aAAY,WACV,EAAKC,SAAS,CAAEJ,MAAM,IAAIC,MAAOC,uBAGjCG,QAAQC,IAAI,EAAKP,MAAMC,QACtB,OAXP,+BAcY,IAAD,EACkBO,KAAKC,MAAtBC,EADD,EACCA,OAAQC,EADT,EACSA,KAEhB,OACE,6BACE,2CAAaA,IAEXD,EACI,mDAAqBF,KAAKR,MAAMC,OAChC,8CAvBd,GAA2BW,IAAMC,WCHpBC,EAAiB,SAAAC,GAAG,OAC/BC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,KCwCzBI,E,4MAjCbnB,MAAQ,CACNoB,gBAAgB,EAChBT,KAAM,K,EAGRU,YAAc,WACZ,EAAKhB,UAAS,SAAAiB,GAAS,MAAK,CAC1BF,gBAAiBE,EAAUF,oB,EAI/BG,WAAa,WACX,IAAMC,EAAUV,EAAe,KAG/BR,QAAQC,IAAR,oCAAyC,EAAKP,MAAMW,KAApD,eAA+Da,IAC/D,EAAKnB,SAAS,CAAEM,KAAMa,K,uDAItB,OACE,yBAAK1B,UAAU,OACb,2CACA,kBAAC,EAAD,CAAOY,OAAQF,KAAKR,MAAMoB,eAAgBT,KAAMH,KAAKR,MAAMW,OAC3D,yBAAKb,UAAU,aACb,kBAAC,EAAD,CAAQJ,MAAOc,KAAKa,YAAa1B,KAAK,qBACtC,kBAAC,EAAD,CAAQD,MAAOc,KAAKe,WAAY5B,KAAK,uB,GA3B7BiB,IAAMC,WCHxBY,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.dec14e2f.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = ({ click, text }) => (\n  <button type=\"button\" onClick={click} className=\"btn btn-light\">\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  click: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  state = {\n    date: new Date().toLocaleTimeString(),\n  };\n\n  componentDidMount() {\n    setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  render() {\n    const { status, name } = this.props;\n\n    return (\n      <div>\n        <p>{`Name: ${name}`}</p>\n        {\n          status\n            ? <p>{`Current time: ${this.state.date}`}</p>\n            : <p>No clocks!</p>\n        }\n      </div>\n    );\n  }\n}\n\nClock.propTypes = {\n  status: PropTypes.bool.isRequired,\n  name: PropTypes.number.isRequired,\n};\n","export const generateNumber = max => (\n  Math.floor(Math.random() * Math.floor(max))\n);\n","import React from 'react';\n\nimport './App.scss';\nimport { Button } from './components/Button';\nimport { Clock } from './components/Clock';\nimport { generateNumber } from './helper';\n\nclass App extends React.Component {\n  state = {\n    isClockVisible: true,\n    name: 100,\n  };\n\n  handleClick = () => {\n    this.setState(prevState => ({\n      isClockVisible: !prevState.isClockVisible,\n    }));\n  }\n\n  changeName = () => {\n    const newName = generateNumber(100);\n\n    // eslint-disable-next-line no-console\n    console.log(`the name has changed from ${this.state.name} to ${newName}`);\n    this.setState({ name: newName });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <Clock status={this.state.isClockVisible} name={this.state.name} />\n        <div className=\"btn-group\">\n          <Button click={this.handleClick} text=\"Clock visibility\" />\n          <Button click={this.changeName} text=\"Name changer\" />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}